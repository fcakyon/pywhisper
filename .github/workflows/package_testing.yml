name: Package Testing

on:
  schedule:
    - cron: '0 0 * * *' # Runs at 00:00 UTC every day

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9, '3.10']
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore Ubuntu cache
        uses: actions/cache@v1
        if: matrix.operating-system == 'ubuntu-latest'
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
          restore-keys: ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Restore MacOS cache
        uses: actions/cache@v1
        if: matrix.operating-system == 'macos-latest'
        with:
          path: ~/Library/Caches/pip
          key: ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
          restore-keys: ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Restore Windows cache
        uses: actions/cache@v1
        if: matrix.operating-system == 'windows-latest'
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
          restore-keys: ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install PyTorch(1.12.1) on Linux and Windows
        if: >
          matrix.operating-system == 'ubuntu-latest' ||
          matrix.operating-system == 'windows-latest'
        run: >
          pip install torch==1.12.1+cpu
          -f https://download.pytorch.org/whl/torch_stable.html

      - name: Install PyTorch(1.12.1) on MacOS
        if: matrix.operating-system == 'macos-latest'
        run: pip install torch==1.12.1

      - name: Install pywhisper package from pypi
        run: >
          pip install -U pywhisper[dev]

      - name: Unittest
        run: |
          pytest tests

      - name: CLI test
        run: |
          pywhisper tests/jfk.flac --model base.en
